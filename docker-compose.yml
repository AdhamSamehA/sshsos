services:
  db:
    image: postgres:latest
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    ports:
      - "${DATABASE_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  server:
    build: .
    restart: always
    env_file:
      - .env
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      SERVER_PORT: ${SERVER_PORT}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${SERVER_PORT}:5200"
    networks:
      - app-network

  # nginx:
  #   image: nginx:latest
  #   restart: always
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #     - /etc/letsencrypt:/etc/letsencrypt:ro  # Mount certificates from host
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - server
  #   networks:
  #     - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
